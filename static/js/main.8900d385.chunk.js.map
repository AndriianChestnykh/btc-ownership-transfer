{"version":3,"sources":["components/UTXO.js","components/AddressUTXOList.js","components/Person.js","components/Transaction.js","components/Transactions.js","components/Intermediate.js","App.js","serviceWorker.js","index.js","config.js","utils.js"],"names":["UTXO","props","getActionButtons","bind","addTxWrapper","sendToOwnerWrapper","sendToHeirWrapper","actions","buttons","addTx","onClick","this","sendToOwner","sendToHeir","Object","keys","map","action","index","key","network","config","tx","utils","childOwner","owner","mnemonic","derivationPath","child","childHeir","heir","txid","utxo","transaction_hash","output","amount","value","fee","sequenceFeed","address","childPerson","redeemScript","Buffer","from","redeem","toHex","style","wordWrap","block_id","React","Component","AddressUTXOList","state","utxos","updateUTXOList","isValid","uri","apiURIs","axios","get","catch","error","alert","response","setState","data","length","validateAddressResult","message","className","getHeader","getAllUtxo","Person","person","updateMnemonic","name","getHDChild","htmlFor","id","cols","rows","onChange","e","target","defaultValue","Transaction","broadcast","raw","removeTx","addIntermediate","Transactions","txs","Intermediate","addressesData","getAddressUtxoLists","App","storage","getStorage","intermediate","removeIntermediate","addressOwner","addressHeir","JSON","parse","localStorage","getItem","getStorageKey","newStorage","setItem","stringify","assign","propName","keyName","filter","newProp","concat","setStorage","keyValue","filtered","slice","indexOf","splice","addStateData","removeStateData","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","bitcoin","testnet","pushTx","blocks","seed","bip39","bip32","derivePath","p2pkh","pubkey","publicKey","signTx","_alice","_bob","sequence","sequenceHex","number","encode","toString","alicePubHex","bobPubHex","fromASM","trim","replace","csvCheckSigOutput","bip68","p2sh","txb","addInput","addOutput","ownerECPair","fromPrivateKey","privateKey","compressed","sign","build","getId","lockFeed","signToOwner","signCsvOutput","signToHeir","isOwner","version","reverse","toOutputScript","signatureHash","hashForSignature","SIGHASH_ALL","personECPair","preRedeemOpcode","OP_TRUE","OP_0","redeemScriptSig","input","compile","signature","setInputScript","validateAddress","bs58check","decode","broadcastTx","a","post","headers"],"mappings":"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","file":"static/js/main.8900d385.chunk.js","sourcesContent":["import React from 'react';\nimport * as utils from '../utils';\nimport config from '../config';\n\nclass UTXO extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getActionButtons = this.getActionButtons.bind(this);\n    this.addTxWrapper = this.addTxWrapper.bind(this);\n    this.sendToOwnerWrapper = this.sendToOwnerWrapper.bind(this);\n    this.sendToHeirWrapper = this.sendToHeirWrapper.bind(this);\n  }\n\n  getActionButtons(actions){\n    const buttons = {\n      addTx: <button onClick={this.addTxWrapper}>Sign intermediate tx</button>,\n      sendToOwner: <button onClick={this.sendToOwnerWrapper}>Widthraw to owner</button>,\n      sendToHeir: <button onClick={this.sendToHeirWrapper}>Widthraw to heir</button>\n    };\n\n    return Object.keys(actions).map((action, index) => buttons[action] ? <div key={index}>{buttons[action]}</div>: '');\n  }\n\n  addTxWrapper(){\n    const { network } = config;\n    const tx = utils.signTx({\n      childOwner: utils.getHDChild(config.owner.mnemonic, config.owner.derivationPath, network).child,\n      childHeir: utils.getHDChild(config.heir.mnemonic, config.heir.derivationPath, network).child,\n      txid: this.props.utxo.transaction_hash,\n      output: this.props.utxo.index,\n      amount: this.props.utxo.value,\n      fee: config.fee,\n      sequenceFeed: config.sequenceFeed,\n      network\n    });\n\n    this.props.actions['addTx'](tx);\n  }\n\n  //todo refactor next two methods to meet DRY\n  sendToOwnerWrapper(){\n    const { network } = config;\n    const { child, address } = utils.getHDChild(config.owner.mnemonic, config.owner.derivationPath, network);\n    const tx = utils.signToOwner({\n      childPerson: child,\n      redeemScript: Buffer.from(this.props.redeem, 'hex'),\n      txid: this.props.utxo.transaction_hash,\n      output: this.props.utxo.index,\n      amount: this.props.utxo.value,\n      fee: config.fee,\n      network\n    });\n    utils.broadcastTx(tx.toHex());\n    this.props.actions['sendToOwner'](address);\n  }\n\n  sendToHeirWrapper(){\n    const { network } = config;\n    const { child, address } = utils.getHDChild(config.heir.mnemonic, config.heir.derivationPath, network);\n    const tx = utils.signToHeir({\n      childPerson: child,\n      redeemScript: Buffer.from(this.props.redeem, 'hex'),\n      txid: this.props.utxo.transaction_hash,\n      output: this.props.utxo.index,\n      amount: this.props.utxo.value,\n      fee: config.fee,\n      sequenceFeed: config.sequenceFeed,\n      network\n    });\n    utils.broadcastTx(tx.toHex());\n    this.props.actions['sendToHeir'](address);\n  }\n\n  render(){\n    return (<div style={{ wordWrap: \"break-word\" }}>\n      <p><strong>UTXO {this.props.index + 1}</strong></p>\n      <span>Tx hash: {this.props.utxo.transaction_hash}</span><br/>\n      <span>Index: {this.props.utxo.index}</span><br/>\n      <span>Value: {this.props.utxo.value / (10**8) + ' BTC'}</span><br/>\n      <span>Block: {this.props.utxo.block_id}</span><br/><br/>\n      { this.getActionButtons(this.props.actions) }<br/><br/>\n    </div>)\n  }\n}\n\nexport default UTXO;","import React from 'react';\nimport UTXO from './UTXO';\nimport axios from 'axios';\nimport config from '../config';\nimport PropTypes from 'prop-types';\nimport * as utils from '../utils';\n\nclass AddressUTXOList extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      utxos: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateUTXOList(this.props.address);\n  }\n\n  async updateUTXOList(address){\n    if (!utils.validateAddress(this.props.address).isValid) return;\n    const uri = `${config.apiURIs.address}/${address}`;\n    const response = await axios.get(uri)\n      .catch(error => alert('Blockchain API request error: ' + error));\n    this.setState({ utxos: response.data.data[address].utxo });\n  }\n\n  getAllUtxo(){\n    const utxos = this.state.utxos;\n    return (utxos && utxos.length\n      ? utxos.map((utxo, index) => (<UTXO key={index}\n                                          index={index}\n                                          utxo={utxo}\n                                          redeem={this.props.redeem}\n                                          actions={this.props.actions}/>))\n      : <div>Empty...</div>);\n  }\n\n  getHeader(){\n    const validateAddressResult = utils.validateAddress(this.props.address);\n    return validateAddressResult.isValid\n      ? <div style={{ wordWrap: \"break-word\" }}><h4>{this.props.address}</h4><p>Redeem: {this.props.redeem}</p><br/></div>\n      : <h4>Address is not valid: {validateAddressResult.message}</h4>;\n  }\n\n  render(){\n    return (<div className=\"content\">\n      {this.getHeader()}\n      {this.getAllUtxo()}\n    </div>)\n  }\n}\n\nAddressUTXOList.propTypes = {\n  address: PropTypes.string.isRequired\n};\n\nexport default AddressUTXOList;","import React from 'react';\nimport AddressUTXOList from \"./AddressUTXOList\";\nimport config from '../config';\nimport PropTypes from 'prop-types';\nimport { getHDChild } from '../utils';\n\nclass Person extends React.Component {\n  render(){\n    const { person, mnemonic, updateMnemonic } = this.props;\n    const { [person]: { derivationPath, name }, network } = config;\n    const { address } = getHDChild(mnemonic, derivationPath, network);\n\n    return (<div className=\"ui card\">\n      <div className=\"content\">\n        <div className=\"header\">{name}</div>\n      </div>\n      <div className=\"content\">\n        <form>\n          <label htmlFor=\"mnemonic\"></label><br/>\n          <textarea id=\"mnemonic\" name=\"mnemonic\" cols=\"30\" rows=\"3\" onChange={(e) => updateMnemonic(person, e.target.value)} defaultValue={mnemonic}></textarea>\n        </form>\n        <p>Derivation path: {derivationPath}</p>\n      </div>\n      <div className=\"content\">\n        <AddressUTXOList address={address} actions={this.props.actions}/>\n      </div>\n    </div>)\n  }\n}\n\nPerson.propTypes = {\n  mnemonic: PropTypes.string,\n  person: PropTypes.string.isRequired,\n  updateMnemonic: PropTypes.func.isRequired,\n  counterPartyAddress: PropTypes.string,\n  signTx: PropTypes.func\n};\n\nexport default Person;","import React from 'react';\nimport * as utils from \"../utils\";\n\nclass Transaction extends React.Component {\n  constructor(props){\n    super(props);\n    this.broadcast = this.broadcast.bind(this);\n  }\n\n  broadcast() {\n    utils.broadcastTx(this.props.tx.raw);\n    this.props.removeTx(this.props.tx.id);\n    this.props.addIntermediate({ address: this.props.tx.address, redeem: this.props.tx.redeem });\n  }\n\n  render() {\n    return (<div className=\"content\" style={{ wordWrap: \"break-word\" }}>\n      <h4>Txid: {this.props.tx.id}</h4>\n      <p>{this.props.tx.raw}</p>\n      <p><button onClick={this.broadcast}>Broadcast</button></p>\n    </div>);\n  }\n}\n\nexport default Transaction;","import React from 'react';\nimport Transaction from \"./Transaction\";\n\nfunction Transactions(props){\n  return (<div className=\"ui card\">\n      <div className=\"content\">\n        <div className=\"header\">Transactions</div>\n      </div>\n      {props.txs.map((tx, index) => <Transaction key={index} tx={tx} removeTx={props.removeTx} addIntermediate={props.addIntermediate}/>)}\n    </div>);\n}\n\nexport default Transactions;","import React from 'react';\nimport AddressUTXOList from \"./AddressUTXOList\";\n\nclass Intermediate extends React.Component{\n  getAddressUtxoLists() {\n    return this.props.addressesData.map((data, index) => (<AddressUTXOList key={index}\n                                                                          address={data.address}\n                                                                          redeem={data.redeem}\n                                                                          actions={this.props.actions}/>))\n  }\n\n  // 2MyhmXWCppJMQH1ui42J7jF4iw4j5aPufHU\n  render(){\n    return (<div className=\"ui card\">\n      <div className=\"content\">\n        <div className=\"header\">Intermediate addresses</div>\n      </div>\n      {this.getAddressUtxoLists()}\n    </div>)\n  }\n}\n\nexport default Intermediate;","import React from 'react';\nimport Person from './components/Person';\nimport Transactions from './components/Transactions';\nimport config from './config';\nimport Intermediate from \"./components/Intermediate\";\nimport {getHDChild} from \"./utils\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const storage = this.getStorage();\n\n    this.state = {\n      owner: {\n        mnemonic: config.owner.mnemonic,\n      },\n      heir: {\n        mnemonic: config.heir.mnemonic,\n      },\n      intermediate: storage.intermediate,\n      txs: storage.txs\n    };\n\n    this.updateMnemonic = this.updateMnemonic.bind(this);\n    this.addTx = this.addTx.bind(this);\n    this.removeTx = this.removeTx.bind(this);\n    this.addIntermediate = this.addIntermediate.bind(this);\n    this.removeIntermediate = this.removeIntermediate.bind(this);\n  }\n\n  getStorageKey() {\n    const { owner, heir, network } = config;\n    const { address: addressOwner } = getHDChild(owner.mnemonic, owner.derivationPath, network);\n    const { address: addressHeir } = getHDChild(heir.mnemonic, heir.derivationPath, network);\n    return `${addressOwner}_${addressHeir}`\n  }\n\n  getStorage() {\n    const storage = JSON.parse(localStorage.getItem(this.getStorageKey()));\n    return {\n      intermediate: storage ? storage.intermediate: [],\n      txs: storage ? storage.txs: []\n    }\n  }\n\n  setStorage(newStorage) {\n    localStorage.setItem(this.getStorageKey(), JSON.stringify(newStorage));\n  }\n\n  updateMnemonic(person, mnemonic) {\n    this.setState((state, props) => {\n      return {[person]: Object.assign({}, this.state[person], {mnemonic})}\n    });\n  }\n\n  addStateData(data, propName, keyName) {\n    if (this.state[propName].filter(value => value[keyName] === data[keyName]).length === 0) {\n      const newProp = this.state[propName].concat([data]);\n      this.setState(state => {\n        let storage = this.getStorage();\n        storage[propName] = newProp;\n        this.setStorage(storage);\n        return { [propName]: newProp }\n      });\n    }\n  }\n\n  removeStateData(propName, keyName, keyValue) {\n    const filtered = this.state[propName].filter(value => value[keyName] === keyValue);\n    if (filtered.length !== 0) {\n      const newProp = this.state[propName].slice();\n      const index = this.state[propName].indexOf(filtered[0]);\n      newProp.splice(index, 1);\n      this.setState(state => {\n        let storage = this.getStorage();\n        storage[propName] = newProp;\n        this.setStorage(storage);\n        return { [propName]: newProp }\n      });\n    }\n  }\n\n  addTx(tx) {\n    this.addStateData(tx, 'txs', 'id');\n  }\n\n  removeTx(txid) {\n    this.removeStateData('txs', 'id', txid);\n  }\n\n  addIntermediate(data) {\n    this.addStateData(data, 'intermediate', 'address');\n  }\n\n  removeIntermediate(address) {\n    this.removeStateData('intermediate', 'address', address);\n  }\n\n\n  // '2MyhmXWCppJMQH1ui42J7jF4iw4j5aPufHU'\n  render(){\n    return (\n      <div className=\"ui container\">\n        <p/>\n        <h2 className=\"ui header center aligned\">Safe Bitcoin inheritance</h2>\n        <div className=\"ui four column doubling stackable grid container\">\n          <div className=\"column\">\n            <Person mnemonic={this.state.owner.mnemonic}\n                    person=\"owner\"\n                    updateMnemonic={this.updateMnemonic}\n                    actions={{ addTx: this.addTx }}\n            />\n          </div>\n          <div className=\"column\">\n            <Transactions txs={this.state.txs} removeTx={this.removeTx} addIntermediate={this.addIntermediate}/>\n          </div>\n          <div className=\"column\">\n            <Intermediate addressesData={this.state.intermediate}\n                          actions={{ sendToOwner: this.removeIntermediate, sendToHeir: this.removeIntermediate }}/>\n          </div>\n          <div className=\"column\">\n            <Person mnemonic={this.state.heir.mnemonic}\n                    person=\"heir\"\n                    updateMnemonic={this.updateMnemonic}\n                    actions={{}}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// Send coins back, when you don't need them anymore to the address\n// mv4rnyY3Su5gjcDNzbMLKBQkBicCtHUtFB","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as bitcoin from 'bitcoinjs-lib';\n\nconst config = {\n  network: bitcoin.networks.testnet,\n  apiURIs: {\n    address: 'https://api.blockchair.com/bitcoin/testnet/dashboards/address',\n    pushTx: 'https://api.blockchair.com/bitcoin/testnet/push/transaction'\n  },\n  owner: {\n    name: 'Alice (owner)',\n    mnemonic: 'assist drama typical garbage artwork devote expect invest theme speed surge you',\n    derivationPath: `m/44'/1'/0'/0/0`\n  },\n  heir: {\n    name: 'Bob (heir)',\n    mnemonic: 'boat ecology top asthma second zero brush episode consider select noble unaware',\n    derivationPath: `m/44'/1'/0'/0/0`\n  },\n  sequenceFeed: { blocks: 6 },\n  fee: 10000\n};\n\nexport default config;","import * as bitcoin from 'bitcoinjs-lib';\nimport * as bip32 from 'bip32';\nimport * as bip39 from 'bip39';\nimport bip68 from \"bip68\";\nimport config from \"./config\";\nimport bs58check from 'bs58check';\nimport axios from \"axios\";\n\nfunction csvCheckSigOutput(_alice, _bob, sequence){\n  const sequenceHex = bitcoin.script.number.encode(sequence).toString('hex');\n  const alicePubHex = _alice.pubkey.toString('hex');\n  const bobPubHex = _bob.pubkey.toString('hex');\n  return bitcoin.script.fromASM(\n    `\n      OP_IF\n        ${alicePubHex}\n        OP_CHECKSIG\n      OP_ELSE\n        ${sequenceHex}\n        OP_CHECKSEQUENCEVERIFY\n        OP_DROP\n        ${bobPubHex}\n        OP_CHECKSIG\n      OP_ENDIF\n    `\n    .trim()\n    .replace(/\\s+/g, ' ')\n  )\n}\n\nfunction getHDChild(mnemonic, derivationPath, network){\n  const seed = bip39.mnemonicToSeedSync(mnemonic);\n  const child = bip32.fromSeed(seed).derivePath(derivationPath);\n  const address = bitcoin.payments.p2pkh({pubkey: child.publicKey, network}).address;\n  return { child, address, publicKey: child.publicKey };\n}\n\nfunction signTx(data) {\n  const { childOwner, childHeir, txid, output, amount, fee, sequenceFeed, network } = data;\n  const owner = bitcoin.payments.p2pkh({pubkey: childOwner.publicKey, network });\n  const heir = bitcoin.payments.p2pkh({pubkey: childHeir.publicKey, network });\n\n  const sequence = bip68.encode(sequenceFeed);\n  const redeemScript = csvCheckSigOutput(owner, heir, sequence);\n  const p2sh = bitcoin.payments.p2sh({\n    redeem: {\n      output: redeemScript,\n    },\n    network: config.network,\n  });\n\n  const txb = new bitcoin.TransactionBuilder(network);\n  txb.addInput(txid, output);\n  txb.addOutput(p2sh.address, amount - fee);\n  const ownerECPair = bitcoin.ECPair.fromPrivateKey(childOwner.privateKey, {\n    compressed: true,\n    network\n  });\n  txb.sign(0, ownerECPair);\n  const tx = txb.build();\n\n  return {\n    raw: tx.toHex(),\n    id: tx.getId(),\n    redeem: redeemScript.toString('hex'),\n    lockFeed: sequenceFeed,\n    address: p2sh.address\n  };\n}\n\nfunction signToOwner(data){\n  return signCsvOutput(true, data);\n}\n\nfunction signToHeir(data){\n  return signCsvOutput(false, data);\n}\n\nfunction signCsvOutput(isOwner, data){\n  const { childPerson, redeemScript, txid, output, amount, fee, network, sequenceFeed } = data;\n  const p2sh = bitcoin.payments.p2sh({\n    redeem: {\n      output: redeemScript,\n    },\n    network,\n  });\n  const person = bitcoin.payments.p2pkh({pubkey: childPerson.publicKey, network });\n\n  const tx = new bitcoin.Transaction();\n  tx.version = 2;\n  isOwner\n    ? tx.addInput(Buffer.from(txid, 'hex').reverse(), output)\n    : tx.addInput(Buffer.from(txid, 'hex').reverse(), output, bip68.encode(sequenceFeed));\n  tx.addOutput(bitcoin.address.toOutputScript(person.address, network), amount - fee);\n\n  const signatureHash = tx.hashForSignature(\n      0,\n      p2sh.redeem.output,\n      bitcoin.Transaction.SIGHASH_ALL\n  );\n  const personECPair = bitcoin.ECPair.fromPrivateKey(childPerson.privateKey, {\n    compressed: true,\n    network\n  });\n  const preRedeemOpcode = isOwner ? bitcoin.opcodes.OP_TRUE: bitcoin.opcodes.OP_0;\n\n  const redeemScriptSig = bitcoin.payments.p2sh({\n    network,\n    redeem: {\n      network,\n      output: p2sh.redeem.output,\n      input: bitcoin.script.compile([\n      bitcoin.script.signature.encode(\n        personECPair.sign(signatureHash),\n        bitcoin.Transaction.SIGHASH_ALL,\n      ),\n      preRedeemOpcode,\n    ]),\n  },\n  }).input;\n  tx.setInputScript(0, redeemScriptSig);\n  return tx;\n}\n\n\n\nfunction validateAddress(address) {\n  let message;\n  let isValid = false;\n  try{\n    isValid = bs58check.decode(address).length === 21;\n    message = isValid ? '': 'Wrong address length';\n  } catch (e){\n    message = 'Error decoding base58check: ' + e.message;\n  }\n  return {\n    isValid,\n    message\n  }\n}\n\nasync function broadcastTx(tx){\n  const uri = config.apiURIs.pushTx;\n  const response = await axios.post(uri, { data: tx }, {\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n    }\n  })\n    .catch(error => alert('Blockchain API request error: ' + error));\n  if (response) alert('Broadcasted with message: ' + JSON.stringify(response));\n}\n\nexport { csvCheckSigOutput, getHDChild, signTx, signToOwner, signToHeir, validateAddress, broadcastTx };"],"sourceRoot":""}